#+title website

* Description
This is going to be an example/portfolio website thats also useful.

All the projects I'll do will be listed on this website, it'll have a login system with permissions and so, so that only the ones with right perms(permissions) can do certain things. 

* Why do some of those things
Anyone sould not have access to just create a project on this website, cause thats a security risk, especially cause if there is code where it could run code on a computer it would be very dangerous.

For example if you have an object: {name: "name of project", desc: "description of project"} and you do an element.innerHTML = proj.name then that name property would execute and if that is some javascript code then it could potentionally run very malicious code that potentionally could just send a file of some sort to somewhere and with that maybe can login to your computer.
So therefor i do not want anyone just create a project.

* Plan
Begginning with the welcome page, and then make it possible to login and have permissions, then administration tools, then project managment

* Ideas
- Issue system

* Todo
** DONE Welcome/start page
CLOSED: [2022-09-23 Fri 10:16]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-09-23 Fri 10:16]
:END:
landing page where you land on when you visit the website.
** DONE Backend
CLOSED: [2022-09-26 Mon 09:42]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-09-26 Mon 09:42]
:END:
Where login, permissions, creation of everything, and more is happening.
** TODO Login
So you can login on the website.
** TODO Permissions
All the permissions a user can have.
** TODO Create account
Creating user accounts.
** TODO Administration page
Here the admins can administrate everything.
** TODO Project creation
This is so that users can create projects.
** TODO Project editation
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-09-23 Fri 10:16]
:END:
This is here cause if you wanna edit something.

* Log
** Week 38
*** Wednessday 21 september
The absolute first commit, were the repo was created
*** Friday 23 september
A gitignore file was created, a welcome page were you land on was created, I created this README.org file for documentation and such, some JavaScript stuff, some css and then a navigation bar.

** Week 39
*** Monday 26 september
Now i created a [[https://github.com/GamersCodeAcademy/website-skola-backend][backend]] with some very basic code, then i initialized it as a npm package, I made an url parser so if the http client would send some wrong things it could parse it to be correct, then added a gitignore to the backend to ignore emacs' auto save files.
*** Wednesday 28 september
I initialized prisma, a package to communicate with a database much easier, [[https://prisma.io][prisma's website]], and insterted .env, node_modules and .log into the gitignore.

Then I started using express insted of http.

Then i started configuring prisma and made typescript work, then i created the prisma client.

Then i added a README.org for planning the backend.
*** Thursday 29 september
On the frontend Fredrik Spaced out some things, created a login.html, created a login.js and edited login.html to use the login.js instead of index.js.
*** Friday 30 september
I added login support to the backend and frontend and I added the build directory to the gitignore.

Fredrik played with some css to have it more organized.

** Week 40
*** Monday 3 October
So I started by logging in this file.

I made a home page where users land when logged in.

I created a signup file then made it work.

Then I made files for creating projects and listing projects.

*** Tuesday 4 October
I made a file for signing out.

And then I implemented jwt.

*** Thursday 6 October
Fredrik made some tweaks to his not working css files, to make them work.

Then i started using another server for auth.

I made better code for the navbar.

Fredrik made some variables in theglobal css file and then made a box in the index html file.

I wrote som async await code so prisma wouldn't freak out.

Then I changed when the access token would expire.

*** Friday 7 October
I made the login work with the navbar.

Then I wanted to switch to using react.js for the frontend.

** Week 41
*** Monday 10 October
I started using react instead of plain html and javascript and css cause with react you can use components(like templates but not) and much, much more, and very easily dothings that would be so damn compicated else.

*** Wednesday 12 October
I made a logged in page where user land when logged in, and some basic styling on the wrapper, and added the box on the about page.

